type Deployment {
  canonical: String!
  type: String!
  instances: [Instance!]
  callbackURL: String!
}

type Instance {
  url: String!
  state: DeploymentState!
  userCredential: Credential
}

type Credential {
  username: String!
  password: String!
}

input NewDeployments {
  deployments: [NewDeployment!]!
  callbackURL: String!
}

input NewDeployment {
  usecase: String!
  services: [NewService!]!
}

input NewService {
  service: ServiceType!
  count: Int
}

extend type Query {
  deployments: [Deployment!]!
  findDeployment(canonical: String!): Deployment!
}

extend type Mutation {
  createDeployments(input: NewDeployments!): [Deployment!]!
  deleteDeployment(canonical: String!): [Deployment!]!
}